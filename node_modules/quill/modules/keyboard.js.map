{"version":3,"file":"keyboard.js","names":["_lodashEs","require","_quillDelta","_interopRequireWildcard","_parchment","_quill","_interopRequireDefault","_logger","_module","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","debug","logger","SHORTKEY","exports","test","navigator","platform","Keyboard","Module","match","evt","binding","some","key","which","constructor","quill","options","bindings","keys","forEach","name","addBinding","shiftKey","handleEnter","metaKey","ctrlKey","altKey","userAgent","collapsed","handleBackspace","handleDelete","prefix","suffix","handleDeleteRange","offset","listen","keyBinding","context","arguments","length","undefined","handler","normalize","warn","Array","isArray","singleBinding","push","root","addEventListener","defaultPrevented","isComposing","concat","matches","filter","blot","Quill","find","target","scroll","range","getSelection","hasFocus","line","getLine","index","leafStart","offsetStart","getLeaf","leafEnd","offsetEnd","prefixText","TextBlot","value","slice","suffixText","curContext","empty","format","getFormat","event","prevented","every","isEqual","preventDefault","getLength","formats","delta","Delta","retain","delete","prev","isPrevLineEmpty","statics","blotName","curFormats","prevFormats","AttributeMap","diff","formatDelta","compose","updateContents","sources","USER","focus","next","nextFormats","deleteRange","lineFormats","reduce","query","Scope","BLOCK","insert","setSelection","SILENT","defaultOptions","bold","makeFormatHandler","italic","underline","indent","outdent","list","makeCodeBlockHandler","deleteText","tab","table","history","cutoff","formatLine","scrollSelectionIntoView","header","module","getModule","row","cell","getTable","shift","tableSide","blockquote","trim","insertText","numLines","cur","makeEmbedArrowHandler","makeTableArrowHandler","DEFAULTS","_ref","CodeBlock","TAB","lines","getLines","insertAt","domNode","textContent","startsWith","deleteAt","update","where","leaf","EmbedBlot","shortKey","up","targetRow","parent","targetCell","children","head","Math","min","targetLine","cloneDeep","_ref2","firstFormats","lastFormats","_table"],"sources":["../../src/modules/keyboard.ts"],"sourcesContent":["import { cloneDeep, isEqual } from 'lodash-es';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport type { Blot, BlockBlot } from 'parchment';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\nimport type { BlockEmbed } from '../blots/block';\nimport type { Range } from '../core/selection';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nexport interface Context {\n  collapsed: boolean;\n  empty: boolean;\n  offset: number;\n  prefix: string;\n  suffix: string;\n  format: Record<string, unknown>;\n  event: KeyboardEvent;\n  line: BlockEmbed | BlockBlot;\n}\n\ninterface BindingObject\n  extends Partial<Omit<Context, 'prefix' | 'suffix' | 'format'>> {\n  key: number | string | string[];\n  shortKey?: boolean | null;\n  shiftKey?: boolean | null;\n  altKey?: boolean | null;\n  metaKey?: boolean | null;\n  ctrlKey?: boolean | null;\n  prefix?: RegExp;\n  suffix?: RegExp;\n  format?: Record<string, unknown> | string[];\n  handler?: (\n    this: { quill: Quill },\n    range: Range,\n    curContext: Context,\n    // eslint-disable-next-line no-use-before-define\n    binding: NormalizedBinding,\n  ) => boolean | void;\n}\n\ntype Binding = BindingObject | string | number;\n\ninterface NormalizedBinding extends Omit<BindingObject, 'key' | 'shortKey'> {\n  key: string | number;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\ninterface KeyboardOptions {\n  bindings: Record<string, Binding>;\n}\n\nclass Keyboard extends Module<KeyboardOptions> {\n  static DEFAULTS: KeyboardOptions;\n\n  static match(evt: KeyboardEvent, binding: BindingObject) {\n    if (\n      (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'] as const).some((key) => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  bindings: Record<string, NormalizedBinding[]>;\n\n  constructor(quill: Quill, options: Partial<KeyboardOptions>) {\n    super(quill, options);\n    this.bindings = {};\n    // @ts-expect-error Fix me later\n    Object.keys(this.options.bindings).forEach((name) => {\n      // @ts-expect-error Fix me later\n      if (this.options.bindings[name]) {\n        // @ts-expect-error Fix me later\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(\n    keyBinding: Binding,\n    context:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n    handler:\n      | Required<BindingObject['handler']>\n      | Partial<Omit<BindingObject, 'key' | 'handler'>> = {},\n  ) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach((key) => {\n      const singleBinding = {\n        ...binding,\n        key,\n        ...context,\n        ...handler,\n      };\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', (evt) => {\n      if (evt.defaultPrevented || evt.isComposing) return;\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter((binding) =>\n        Keyboard.match(evt, binding),\n      );\n      if (matches.length === 0) return;\n      // @ts-expect-error\n      const blot = Quill.find(evt.target, true);\n      if (blot && blot.scroll !== this.quill.scroll) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        // @ts-expect-error Fix me later\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some((binding) => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every((name) => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every((name) => {\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              // @ts-expect-error Fix me later\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              // @ts-expect-error Fix me later\n              return isEqual(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        // @ts-expect-error Fix me later\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const isPrevLineEmpty =\n          prev.statics.blotName === 'block' && prev.length() <= 1;\n        if (!isPrevLineEmpty) {\n          // @ts-expect-error Fix me later\n          const curFormats = line.formats();\n          const prevFormats = this.quill.getFormat(range.index - 1, 1);\n          formats = AttributeMap.diff(curFormats, prevFormats) || {};\n          if (Object.keys(formats).length > 0) {\n            // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n            const formatDelta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - 2)\n              .retain(1, formats);\n            delta = delta.compose(formatDelta);\n          }\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range: Range, context: Context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    // @ts-expect-error Fix me later\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        // @ts-expect-error Fix me later\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n    this.quill.focus();\n  }\n\n  handleEnter(range: Range, context: Context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats: Record<string, unknown>, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n}\n\nconst defaultOptions: KeyboardOptions = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats: Record<string, unknown> = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = {\n          // @ts-expect-error Fix me later\n          ...line.formats(),\n          list: 'checked',\n        };\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollSelectionIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          // @ts-expect-error\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        'code-block': false,\n        blockquote: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          // @ts-expect-error Fix me later\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          // @ts-expect-error\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              // @ts-expect-error Fix me later\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nKeyboard.DEFAULTS = defaultOptions;\n\nfunction makeCodeBlockHandler(indent: boolean): BindingObject {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range, { event }) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      // @ts-expect-error\n      const { TAB } = CodeBlock;\n      if (range.length === 0 && !event.shiftKey) {\n        this.quill.insertText(range.index, TAB, Quill.sources.USER);\n        this.quill.setSelection(range.index + TAB.length, Quill.sources.SILENT);\n        return;\n      }\n\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, TAB);\n          if (i === 0) {\n            index += TAB.length;\n          } else {\n            length += TAB.length;\n          }\n          // @ts-expect-error Fix me later\n        } else if (line.domNode.textContent.startsWith(TAB)) {\n          line.deleteAt(0, TAB.length);\n          if (i === 0) {\n            index -= TAB.length;\n          } else {\n            length -= TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(\n  key: string,\n  shiftKey: boolean | null,\n): BindingObject {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format: string): BindingObject {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up: boolean): BindingObject {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          // @ts-expect-error\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            // @ts-expect-error\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        // @ts-expect-error\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding: Binding): BindingObject | null {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = cloneDeep(binding);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\n// TODO: Move into quill.ts or editor.ts\nfunction deleteRange({ quill, range }: { quill: Quill; range: Range }) {\n  const lines = quill.getLines(range);\n  let formats = {};\n  if (lines.length > 1) {\n    const firstFormats = lines[0].formats();\n    const lastFormats = lines[lines.length - 1].formats();\n    formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n  }\n  quill.deleteText(range, Quill.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n  }\n  quill.setSelection(range.index, Quill.sources.SILENT);\n}\n\nfunction tableSide(_table: unknown, row: Blot, cell: Blot, offset: number) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize, deleteRange };\n"],"mappings":"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"}