"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ListContainer = void 0;
var _block = _interopRequireDefault(require("../blots/block"));
var _container = _interopRequireDefault(require("../blots/container"));
var _quill = _interopRequireDefault(require("../core/quill"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
class ListContainer extends _container.default {}
exports.ListContainer = ListContainer;
ListContainer.blotName = 'list-container';
ListContainer.tagName = 'OL';
class ListItem extends _block.default {
  static create(value) {
    // @ts-expect-error
    const node = super.create();
    node.setAttribute('data-list', value);
    return node;
  }
  static formats(domNode) {
    return domNode.getAttribute('data-list') || undefined;
  }
  static register() {
    _quill.default.register(ListContainer);
  }
  constructor(scroll, domNode) {
    super(scroll, domNode);
    const ui = domNode.ownerDocument.createElement('span');
    const listEventHandler = e => {
      if (!scroll.isEnabled()) return;
      const format = this.statics.formats(domNode, scroll);
      if (format === 'checked') {
        this.format('list', 'unchecked');
        e.preventDefault();
      } else if (format === 'unchecked') {
        this.format('list', 'checked');
        e.preventDefault();
      }
    };
    ui.addEventListener('mousedown', listEventHandler);
    ui.addEventListener('touchstart', listEventHandler);
    this.attachUI(ui);
  }
  format(name, value) {
    if (name === this.statics.blotName && value) {
      this.domNode.setAttribute('data-list', value);
    } else {
      super.format(name, value);
    }
  }
}
exports.default = ListItem;
ListItem.blotName = 'list';
ListItem.tagName = 'LI';
ListContainer.allowedChildren = [ListItem];
ListItem.requiredContainer = ListContainer;
//# sourceMappingURL=list.js.map