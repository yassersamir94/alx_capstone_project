{"version":3,"file":"block.js","names":["_parchment","require","_quillDelta","_interopRequireDefault","_break","_inline","_text","obj","__esModule","default","NEWLINE_LENGTH","Block","BlockBlot","cache","delta","blockDelta","deleteAt","index","length","formatAt","name","value","scroll","query","Scope","BLOCK","format","Math","min","insertAt","def","lines","split","text","shift","children","tail","block","reduce","lineIndex","line","insertBefore","blot","ref","head","Break","remove","moveChildren","target","optimize","context","path","removeChild","child","force","arguments","undefined","clone","parent","next","exports","blotName","tagName","defaultChild","allowedChildren","Inline","EmbedBlot","TextBlot","BlockEmbed","attach","attributes","AttributorStore","domNode","Delta","insert","formats","values","attribute","BLOCK_ATTRIBUTE","pop","blocks","map","create","forEach","scope","BLOCK_BLOT","filter","descendants","LeafBlot","leaf","bubbleFormats","statics"],"sources":["../../src/blots/block.ts"],"sourcesContent":["import {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport type { Blot, Parent } from 'parchment';\nimport Delta from 'quill-delta';\nimport Break from './break';\nimport Inline from './inline';\nimport TextBlot from './text';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  cache: { delta?: Delta | null; length?: number } = {};\n\n  delta(): Delta {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index: number, length: number) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift() as string;\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    // TODO: Fix this next time the file is edited.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let block: Blot | this = this;\n    lines.reduce((lineIndex, line) => {\n      // @ts-expect-error Fix me later\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target: Parent, ref?: Blot | null) {\n    // @ts-expect-error Parchment types are wrong\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index: number) {\n    return super.path(index, true);\n  }\n\n  removeChild(child: Blot) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index: number, force: boolean | undefined = false): Blot | null {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      // @ts-expect-error Fix me later\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attributes: AttributorStore;\n  domNode: HTMLElement;\n\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(this.value(), {\n      ...this.formats(),\n      ...this.attributes.values(),\n    });\n  }\n\n  format(name: string, value: unknown) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      // @ts-expect-error TODO: Scroll#query() should return Attributor when scope is attribute\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index: number, length: number, name: string, value: unknown) {\n    this.format(name, value);\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      return;\n    }\n    const lines = value.split('\\n');\n    const text = lines.pop();\n    const blocks = lines.map((line) => {\n      const block = this.scroll.create(Block.blotName);\n      block.insertAt(0, line);\n      return block;\n    });\n    const ref = this.split(index);\n    blocks.forEach((block) => {\n      // @ts-expect-error Fix me later\n      this.parent.insertBefore(block, ref);\n    });\n    if (text) {\n      // @ts-expect-error Fix me later\n      this.parent.insertBefore(this.scroll.create('text', text), ref);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot: BlockBlot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(\n  blot: Blot | null,\n  formats: Record<string, unknown> = {},\n  filter = true,\n): Record<string, unknown> {\n  if (blot == null) return formats;\n  if ('formats' in blot && typeof blot.formats === 'function') {\n    formats = {\n      ...formats,\n      ...blot.formats(),\n    };\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n"],"mappings":"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"}